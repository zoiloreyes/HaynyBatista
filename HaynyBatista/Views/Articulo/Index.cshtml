@model IEnumerable<HaynyBatista.Models.Articulo>

@{
    ViewBag.Title = "Index";
}

@if (this.User.IsInRole("Administrador"))
{
    <div class="row">
        <div class="col-md-10">
            <button class="btn-block haynyBtn btn-danger py-2" data-toggle="modal" data-target="#NuevoArticulo"><strong>Nueva Entrada</strong><i class="fa fa-plus ml-2" aria-hidden="true"></i></button>
        </div>
    </div>
    @section OutsideContainer{
    <form id="frmNuevoArticulo" method="post" enctype="multipart/form-data">
        <div class="modal fade" id="NuevoArticulo">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="d-flex flex-row-reverse">
                            <button type="button" class="haynyBtn btn-success px-3" id="btnGuardarArticulo" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">Publicar <i class="fa fa-check-circle" aria-hidden="true"></i></span>
                            </button>
                        </div>



                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body mw-100">
                        <div class="container-fluid">
                            <div class="row">
                                <div class="col-md-9">
                                    <textarea name="Titulo" id="inputTituloArticulo" class="TitleInput ASTextArea requerido" data-title="Titulo" placeholder="Titulo..."></textarea>
                                    <textarea name="Contenido" id="inputContenidoArticulo" data-title="Contenido" class="tinymceTextArea mt-2 tinyMCErequerido">

                                </textarea>
                                </div>
                                <div class="col-md-3">
                                    <div id="accordion" role="tablist" aria-multiselectable="true">
                                        <div class="card">
                                            <div class="card-header SettingHeader" role="tab" id="TagsSettingsH">
                                                <div class="d-flex justify-content-between">
                                                    <div class="d-flex">
                                                        <a class="SettingHeaderAnchor" data-toggle="collapse" data-parent="#accordion" href="#TagsSettingsB" aria-expanded="true" aria-controls="collapseOne">
                                                            <i class="fa fa-tags mr-1" aria-hidden="true"></i><span>Etiquetas</span>
                                                        </a>
                                                    </div>
                                                    <div class="d-flex">
                                                        <i class="fa fa-arrow-right SettingHeaderArrow pt-1" aria-hidden="true"></i>
                                                    </div>
                                                </div>

                                            </div>

                                            <div id="TagsSettingsB" class="collapse p-md-2 SettingBody" role="tabpanel" aria-labelledby="headingOne">
                                                <div class="card-block">
                                                    <div class="form-group">
                                                        <label for="exampleInputPassword1">Etiquetas <i class="fa fa-info-circle text-info tooltipTrigger" data-toggle="tooltip" data-placement="top" title="Introduzca Etiquetas para hacer más facil su busqueda. Separe las etiquetas por coma ','" aria-hidden="true"></i></label>
                                                        <input name="Etiquetas" type="text" class="form-control" id="Etiquetas" data-role="tagsinput" placeholder="Etiqueta">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="card">
                                            <div class="card-header SettingHeader" role="tab" id="ImageSettingsH">
                                                <div class="d-flex justify-content-between">
                                                    <div class="d-flex">
                                                        <a class="SettingHeaderAnchor" data-toggle="collapse" data-parent="#accordion" href="#ImageSettingsB" aria-expanded="true" aria-controls="collapseOne">
                                                            <i class="fa fa-picture-o mr-1" aria-hidden="true"></i><span>Imagen</span>
                                                        </a>
                                                    </div>
                                                    <div class="d-flex">
                                                        <i class="fa fa-arrow-right SettingHeaderArrow pt-1" aria-hidden="true"></i>
                                                    </div>
                                                </div>

                                            </div>

                                            <div id="ImageSettingsB" class="collapse p-md-2 SettingBody" role="tabpanel" aria-labelledby="headingOne">
                                                <div class="card-block">
                                                    <div class="d-flex flex-column justify-content-center">
                                                        <div class="d-flex justify-content-center">
                                                            <a class="haynyBtn btn-danger text-white indirectClick" href="#inputImgArticulo">Subir Imagen</a>
                                                        </div>
                                                    </div>
                                                    <div class="d-flex flex-column justify-content-center ImagePreviewContainer my-2" id="ImgContainerInputArticulo">
                                                        
                                                    </div>
                                                    <input type="file" class="d-none" id="inputImgArticulo" accept="image/*"/>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            </div>
    </form>
    
    }
    
}


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Imagen.Formato)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Usuario.IdUsuario)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Titutlo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contenido)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FechaSubida)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Imagen.Formato)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Usuario.IdUsuario)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Titutlo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Contenido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaSubida)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.IdArticulo }) |
                @Html.ActionLink("Details", "Details", new { id = item.IdArticulo }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.IdArticulo })
            </td>
        </tr>
    }

</table>

@if (this.User.IsInRole("Administrador"))
{
    @section Scripts{
        <script>
            $(document).ready(function () {
                $("#inputImgArticulo").on("change", function () {
                    var button = $(this);
                    $("#ImgContainerInputArticulo").addTempClass({
                        className: "animated bounceIn",
                        timeOut: 2000
                        
                    });
                    SetImgBackgroundFromFile(this, $("#ImgContainerInputArticulo"));

                })

                $(".SettingBody").on("show.bs.collapse hide.bs.collapse", function () {
                    $(this).siblings(".SettingHeader").find(".SettingHeaderArrow").toggleClass("flip90Positive");
                });

                $(".SettingHeader").click(function (event) {
                    $($(this).find(".SettingHeaderAnchor").attr("href")).collapse("toggle");
                });

                $("#btnGuardarArticulo").click(function () {
                    GuardarArticulo();
                })
            })

            function GuardarArticulo() {
                var formData = new FormData();
                
                var inputImagen = $("#inputImgArticulo")[0];

                var validacion = validarForm("#frmNuevoArticulo");
                if (validacion.Estado) {
                    if (!inputImagen.files) {
                        Notificar("prueba", "<p>Su navegador no soporta subida de archivos</p>")
                    } else if (!inputImagen.files[0]) {

                    } else {
                        formData.append("Imagen", inputImagen.files[0]);
                    }

                    tinymce.get('inputContenidoArticulo').getContent();
                    formData.append("Titulo", $("#inputTituloArticulo").val());
                    formData.append("Contenido", tinymce.get('inputContenidoArticulo').getContent());


                    var etiquetas = $("#Etiquetas").val().split(",").map(function (value) {
                        object = {
                            Nombre: value
                        };
                        return object;
                    });

                    formData.append("Etiquetas", JSON.stringify(etiquetas));
                    
                    $.ajax({
                        url: "/Articulo/GuardarArticulo",
                        data: formData,
                        type: "POST",
                        async: false,
                        contentType: false,
                        processData: false,
                        dataType: "json",
                        success: function (result) {
                            console.log(result);
                            
                        },
                        error: function (errorMessage) {
                            alert(errorMessage.responseText);
                        }
                    });

                } else {
                    for (var error of validacion.Errores) {
                        if (error.objeto.is(":visible")) {
                            $(error.objeto).data("toggle", "tooltip");
                            $(error.objeto).data("placement", "right");
                            $(error.objeto).attr("title", error.msg);
                            $(error.objeto).tooltip("toggle");
                            setTimeout(function () {
                                $(error.objeto.attr("id")).tooltip("dispose");
                            }, 2000)
                        }
                        
                    }
                }
                
               
                
            }
            function SetImgBackgroundFromFile(input, element) {
                if (window.File && window.FileList && window.FileReader) {
                    var files = input.files;
                    for (var i = 0; i < files.length; i++) {
                        var file = files[i];
                        
                        if (!file.type.match('image')) continue;

                        var picReader = new FileReader();

                        picReader.addEventListener("load", function (event) {
                            var picFile = event.target;
                            $(element).css("background-size", "contain");
                            $(element).css("background-repeat", "no-repeat");
                            $(element).css("background-position", "center center");
                            $(element).css("background-image", "url(" + picFile.result+")");
                        });

                        picReader.readAsDataURL(files[i]);

                    }
                } else {
                    Notificar("","<p>Tu navegador no soporta File API</p>");
                }
            }
        </script>

    }
}
